Variant = "standard";
Generator = "NONE";
Base = "Base";
Date = "2017-10-13";
KLL = "0.5c";
Author = "jbondeson (Jeremy Bondeson) 2017";
Version = "0.2";
Name = "KType";
Layout = "Standard";



U"ESC" : U"ESC";
U"F1" : U"F1";
U"F2" : U"F2";
U"F3" : U"F3";
U"F4" : U"F4";
U"F5" : U"F5";
U"F6" : U"F6";
U"F7" : U"F7";
U"F8" : U"F8";
U"F9" : U"F9";
U"F10" : U"F10";
U"F11" : U"F11";
U"F12" : U"F12";
U"PRINTSCREEN" : U"PRINTSCREEN";
U"SCROLLLOCK" : U"SCROLLLOCK";
U"PAUSE" : U"PAUSE";
U"BACKTICK" : U"`";
U"1" : U"1";
U"2" : U"2";
U"3" : U"3";
U"4" : U"4";
U"5" : U"5";
U"6" : U"6";
U"7" : U"7";
U"8" : U"8";
U"9" : U"9";
U"0" : U"0";
U"MINUS" : U"-";
U"EQUALS" : U"=";
U"BACKSPACE" : U"BACKSPACE";
U"INSERT" : U"INSERT";
U"HOME" : U"HOME";
U"PAGEUP" : U"PAGEUP";
U"TAB" : U"TAB";
U"Q" : U"Q";
U"W" : U"W";
U"E" : U"E";
U"R" : U"R";
U"T" : U"T";
U"Y" : U"Y";
U"U" : U"U";
U"I" : U"I";
U"O" : U"O";
U"P" : U"P";
U"LBRACE" : U"[";
U"RBRACE" : U"]";
U"BACKSLASH" : U"\";
U"DELETE" : U"DELETE";
U"END" : U"END";
U"PAGEDOWN" : U"PAGEDOWN";
U"CAPSLOCK" : U"CAPSLOCK";
U"A" : U"A";
U"S" : U"S";
U"D" : U"D";
U"F" : U"F";
U"G" : U"G";
U"H" : U"H";
U"J" : U"J";
U"K" : U"K";
U"L" : U"L";
U"SEMICOLON" : U";";
U"QUOTE" : U"'";
U"ENTER" : U"ENTER";
U"LSHIFT" : U"LSHIFT";
U"Z" : U"Z";
U"X" : U"X";
U"C" : U"C";
U"V" : U"V";
U"B" : U"B";
U"N" : U"N";
U"M" : U"M";
U"COMMA" : U",";
U"PERIOD" : U".";
U"SLASH" : U"/";
U"RSHIFT" : U"RSHIFT";
U"UP" : U"UP";
U"LCTRL" : U"LCTRL";
U"LGUI" : U"LGUI";
U"LALT" : U"LALT";
U"SPACE" : U"SPACE";
U"RALT" : U"RALT";
U"RGUI" : U"APP";
U"APP" : U"FUNCTION1";
U"RCTRL" : U"RCTRL";
U"LEFT" : U"LEFT";
U"DOWN" : U"DOWN";
U"RIGHT" : U"RIGHT";

A[fingerprints] <= framedelay:2, framestretch, loops:1, replace:basic;
### AUTO GENERATED - DO NOT EDIT ###
A[fingerprints, 1] <= P[r:i,c:i](0,0,255);
A[fingerprints, 2] <= P[r:i,c:i](0,0,255);
A[fingerprints, 3] <= P[r:i,c:i](24,7,226);
A[fingerprints, 4] <= P[r:i,c:i](36,15,171);
A[fingerprints, 5] <= P[r:i,c:i](36,17,120);
A[fingerprints, 6] <= P[r:i,c:i](30,16,71);
A[fingerprints, 7] <= P[r:i,c:i](0,0,0);
A[fingerprints, 8] <= P[r:i,c:i](0,0,0);

# Relative animation test
A[relative_add] <= replace:basic, loops:2, framedelay:1;
A[relative_add, 1] <= P[r:i](+:10,+:10,+:10), P[c:i](+:10,+:10,+:10);
A[relative_add, 2] <= P[r:i](+:10,+:10,+:10), P[c:i](+:10,+:10,+:10);
A[relative_add, 3] <= P[r:i](+:10,+:10,+:10), P[c:i](+:10,+:10,+:10);
A[relative_add, 4] <= P[r:i](+:10,+:10,+:10), P[c:i](+:10,+:10,+:10);
A[relative_add, 5] <= P[r:i](+:10,+:10,+:10), P[c:i](+:10,+:10,+:10);
A[relative_add, 6] <= P[r:i](+:10,+:10,+:10), P[c:i](+:10,+:10,+:10);
A[relative_add, 7] <= P[r:i](+:10,+:10,+:10), P[c:i](+:10,+:10,+:10);
A[relative_add, 8] <= P[r:i](+:10,+:10,+:10), P[c:i](+:10,+:10,+:10);
A[relative_add, 9] <= P[r:i](+:10,+:10,+:10), P[c:i](+:10,+:10,+:10);
A[relative_add, 10] <= P[r:i](+:10,+:10,+:10), P[c:i](+:10,+:10,+:10);
A[relative_add, 11] <= P[r:i](-:10,-:10,-:10), P[c:i](-:10,-:10,-:10);
A[relative_add, 12] <= P[r:i](-:10,-:10,-:10), P[c:i](-:10,-:10,-:10);
A[relative_add, 13] <= P[r:i](-:10,-:10,-:10), P[c:i](-:10,-:10,-:10);
A[relative_add, 14] <= P[r:i](-:10,-:10,-:10), P[c:i](-:10,-:10,-:10);
A[relative_add, 15] <= P[r:i](-:10,-:10,-:10), P[c:i](-:10,-:10,-:10);
A[relative_add, 16] <= P[r:i](-:10,-:10,-:10), P[c:i](-:10,-:10,-:10);
A[relative_add, 17] <= P[r:i](-:10,-:10,-:10), P[c:i](-:10,-:10,-:10);
A[relative_add, 18] <= P[r:i](-:10,-:10,-:10), P[c:i](-:10,-:10,-:10);
A[relative_add, 19] <= P[r:i](-:10,-:10,-:10), P[c:i](-:10,-:10,-:10);
A[relative_add, 20] <= P[r:i](-:10,-:10,-:10), P[c:i](-:10,-:10,-:10);
#A[relative_add, 21] <= P[r:i,c:i](50,50,50);
#A[relative_add, 2] <= P[c:i](+100,+100,+100);
#A[relative_add, 3] <= P[r:i,c:i](+100,+100,+100);

# TODO Move to U"CapsLock" when working
A[caps_lock] <= loop, replace:all;
A[caps_lock, 1] <= S[0x36](+:50,+:50,+:50);
A[caps_lock, 2] <= S[0x36](+:50,+:50,+:50);
A[caps_lock, 3] <= S[0x36](+:50,+:50,+:50);
A[caps_lock, 4] <= S[0x36](+:50,+:50,+:50);
A[caps_lock, 5] <= S[0x36](-:20,-:20,-:20);
A[caps_lock, 6] <= S[0x36](-:20,-:20,-:20);
A[caps_lock, 7] <= S[0x36](-:20,-:20,-:20);
A[caps_lock, 5] <= S[0x36](-:20,-:20,-:20);
A[caps_lock, 6] <= S[0x36](-:20,-:20,-:20);
A[caps_lock, 8] <= S[0x36](-:20,-:20,-:20);
A[caps_lock, 9] <= S[0x36](-:20,-:20,-:20);
A[caps_lock, 10] <= S[0x36](-:20,-:20,-:20);
A[caps_lock, 11] <= S[0x36](-:20,-:20,-:20);
A[caps_lock, 12] <= S[0x36](-:20,-:20,-:20);

# Fade-in example
# TODO - Use frame interpolation when ready
A[fade_in] <= pfunc:interp, loops:1, replace:basic;
A[fade_in, 1] <= P[c:0%](0,0,0), P[c:100%](0,0,0);
A[fade_in, 2] <= P[c:0%](5,5,5), P[c:100%](5,5,5);
A[fade_in, 3] <= P[c:0%](10,10,10), P[c:100%](10,10,10);
A[fade_in, 4] <= P[c:0%](20,20,20), P[c:100%](20,20,20);
A[fade_in, 5] <= P[c:0%](40,40,40), P[c:100%](40,40,40);
A[fade_in, 6] <= P[c:0%](60,60,60), P[c:100%](60,60,60);
A[fade_in, 7] <= P[c:0%](80,80,80), P[c:100%](80,80,80);
A[fade_in, 8] <= P[c:0%](100,100,100), P[c:100%](100,100,100);
A[fade_in, 9] <= P[c:0%](130,130,130), P[c:100%](130,130,130);
A[fade_in, 10] <= P[c:0%](160,160,160), P[c:100%](160,160,160);
A[fade_in, 11] <= P[c:0%](190,190,190), P[c:100%](190,190,190);
A[fade_in, 12] <= P[c:0%](220,220,220), P[c:100%](220,220,220);
A[fade_in, 13] <= P[c:0%](255,255,255), P[c:100%](255,255,255);
A[fade_in, 14] <= P[c:0%](200,200,200), P[c:100%](200,200,200);
A[fade_in, 15] <= P[c:0%](200,200,200), P[c:100%](200,200,200);
A[fade_in, 16] <= P[c:0%](200,200,200), P[c:100%](200,200,200);
A[fade_in, 17] <= P[c:0%](150,150,150), P[c:100%](150,150,150);
A[fade_in, 18] <= P[c:0%](150,150,150), P[c:100%](150,150,150);
A[fade_in, 19] <= P[c:0%](100,100,100), P[c:100%](100,100,100);
A[fade_in, 20] <= P[c:0%](100,100,100), P[c:100%](100,100,100);
A[fade_in, 21] <= P[c:0%](100,100,100), P[c:100%](100,100,100);
A[fade_in, 22] <= P[c:0%](75,75,75), P[c:75%](75,75,75);
A[fade_in, 23] <= P[c:0%](75,75,75), P[c:75%](75,75,75);
A[fade_in, 24] <= P[c:0%](75,75,75), P[c:75%](75,75,75);
A[fade_in, 25] <= P[c:0%](50,50,50), P[c:50%](50,50,50);
A[fade_in, 26] <= P[c:0%](50,50,50), P[c:50%](50,50,50);
A[fade_in, 27] <= P[c:0%](50,50,50), P[c:50%](50,50,50);
A[fade_in, 28] <= P[c:0%](30,30,30), P[c:100%](30,30,30);
A[fade_in, 29] <= P[c:0%](10,10,10), P[c:100%](10,10,10);
A[fade_in, 30] <= P[c:0%](0,0,0), P[c:100%](0,0,0);

### Added by canned animation fingerprints ###
S[0x00-0x5F] :+ A[fingerprints](start);

#U"A"(P) :+ A[fingerprints](start);
#U"A"(R) :+ A[fingerprints](stop);

U"Insert" :+ A[fade_in](start);

A[single_color] <= 222222replace:basic, pfunc:interp;
A[single_color, 1] <= P[c:0%](70,70,70), P[c:100%](70,70,70);
